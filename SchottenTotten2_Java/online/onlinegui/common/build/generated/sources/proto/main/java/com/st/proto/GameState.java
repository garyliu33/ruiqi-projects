// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_state.proto

package com.st.proto;

public final class GameState {
  private GameState() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code com.st.proto.WinnerProto}
   */
  public enum WinnerProto
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NONE_WINNER = 0;</code>
     */
    NONE_WINNER(0),
    /**
     * <code>ATTACKER = 1;</code>
     */
    ATTACKER(1),
    /**
     * <code>DEFENDER = 2;</code>
     */
    DEFENDER(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>NONE_WINNER = 0;</code>
     */
    public static final int NONE_WINNER_VALUE = 0;
    /**
     * <code>ATTACKER = 1;</code>
     */
    public static final int ATTACKER_VALUE = 1;
    /**
     * <code>DEFENDER = 2;</code>
     */
    public static final int DEFENDER_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static WinnerProto valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static WinnerProto forNumber(int value) {
      switch (value) {
        case 0: return NONE_WINNER;
        case 1: return ATTACKER;
        case 2: return DEFENDER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<WinnerProto>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        WinnerProto> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WinnerProto>() {
            public WinnerProto findValueByNumber(int number) {
              return WinnerProto.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.st.proto.GameState.getDescriptor().getEnumTypes().get(0);
    }

    private static final WinnerProto[] VALUES = values();

    public static WinnerProto valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private WinnerProto(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.st.proto.WinnerProto)
  }

  public interface CardListProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.st.proto.CardListProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
     */
    java.util.List<com.st.proto.Card.CardProto> 
        getCardListList();
    /**
     * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
     */
    com.st.proto.Card.CardProto getCardList(int index);
    /**
     * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
     */
    int getCardListCount();
    /**
     * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
     */
    java.util.List<? extends com.st.proto.Card.CardProtoOrBuilder> 
        getCardListOrBuilderList();
    /**
     * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
     */
    com.st.proto.Card.CardProtoOrBuilder getCardListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.st.proto.CardListProto}
   */
  public static final class CardListProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.st.proto.CardListProto)
      CardListProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CardListProto.newBuilder() to construct.
    private CardListProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CardListProto() {
      cardList_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CardListProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.st.proto.GameState.internal_static_com_st_proto_CardListProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.st.proto.GameState.internal_static_com_st_proto_CardListProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.st.proto.GameState.CardListProto.class, com.st.proto.GameState.CardListProto.Builder.class);
    }

    public static final int CARD_LIST_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.st.proto.Card.CardProto> cardList_;
    /**
     * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.st.proto.Card.CardProto> getCardListList() {
      return cardList_;
    }
    /**
     * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.st.proto.Card.CardProtoOrBuilder> 
        getCardListOrBuilderList() {
      return cardList_;
    }
    /**
     * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
     */
    @java.lang.Override
    public int getCardListCount() {
      return cardList_.size();
    }
    /**
     * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
     */
    @java.lang.Override
    public com.st.proto.Card.CardProto getCardList(int index) {
      return cardList_.get(index);
    }
    /**
     * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
     */
    @java.lang.Override
    public com.st.proto.Card.CardProtoOrBuilder getCardListOrBuilder(
        int index) {
      return cardList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < cardList_.size(); i++) {
        output.writeMessage(1, cardList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < cardList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cardList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.st.proto.GameState.CardListProto)) {
        return super.equals(obj);
      }
      com.st.proto.GameState.CardListProto other = (com.st.proto.GameState.CardListProto) obj;

      if (!getCardListList()
          .equals(other.getCardListList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getCardListCount() > 0) {
        hash = (37 * hash) + CARD_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getCardListList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.st.proto.GameState.CardListProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.st.proto.GameState.CardListProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.st.proto.GameState.CardListProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.st.proto.GameState.CardListProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.st.proto.GameState.CardListProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.st.proto.GameState.CardListProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.st.proto.GameState.CardListProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.st.proto.GameState.CardListProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.st.proto.GameState.CardListProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.st.proto.GameState.CardListProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.st.proto.GameState.CardListProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.st.proto.GameState.CardListProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.st.proto.GameState.CardListProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.st.proto.CardListProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.st.proto.CardListProto)
        com.st.proto.GameState.CardListProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.st.proto.GameState.internal_static_com_st_proto_CardListProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.st.proto.GameState.internal_static_com_st_proto_CardListProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.st.proto.GameState.CardListProto.class, com.st.proto.GameState.CardListProto.Builder.class);
      }

      // Construct using com.st.proto.GameState.CardListProto.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (cardListBuilder_ == null) {
          cardList_ = java.util.Collections.emptyList();
        } else {
          cardList_ = null;
          cardListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.st.proto.GameState.internal_static_com_st_proto_CardListProto_descriptor;
      }

      @java.lang.Override
      public com.st.proto.GameState.CardListProto getDefaultInstanceForType() {
        return com.st.proto.GameState.CardListProto.getDefaultInstance();
      }

      @java.lang.Override
      public com.st.proto.GameState.CardListProto build() {
        com.st.proto.GameState.CardListProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.st.proto.GameState.CardListProto buildPartial() {
        com.st.proto.GameState.CardListProto result = new com.st.proto.GameState.CardListProto(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.st.proto.GameState.CardListProto result) {
        if (cardListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            cardList_ = java.util.Collections.unmodifiableList(cardList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.cardList_ = cardList_;
        } else {
          result.cardList_ = cardListBuilder_.build();
        }
      }

      private void buildPartial0(com.st.proto.GameState.CardListProto result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.st.proto.GameState.CardListProto) {
          return mergeFrom((com.st.proto.GameState.CardListProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.st.proto.GameState.CardListProto other) {
        if (other == com.st.proto.GameState.CardListProto.getDefaultInstance()) return this;
        if (cardListBuilder_ == null) {
          if (!other.cardList_.isEmpty()) {
            if (cardList_.isEmpty()) {
              cardList_ = other.cardList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCardListIsMutable();
              cardList_.addAll(other.cardList_);
            }
            onChanged();
          }
        } else {
          if (!other.cardList_.isEmpty()) {
            if (cardListBuilder_.isEmpty()) {
              cardListBuilder_.dispose();
              cardListBuilder_ = null;
              cardList_ = other.cardList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              cardListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCardListFieldBuilder() : null;
            } else {
              cardListBuilder_.addAllMessages(other.cardList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.st.proto.Card.CardProto m =
                    input.readMessage(
                        com.st.proto.Card.CardProto.parser(),
                        extensionRegistry);
                if (cardListBuilder_ == null) {
                  ensureCardListIsMutable();
                  cardList_.add(m);
                } else {
                  cardListBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.st.proto.Card.CardProto> cardList_ =
        java.util.Collections.emptyList();
      private void ensureCardListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          cardList_ = new java.util.ArrayList<com.st.proto.Card.CardProto>(cardList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.st.proto.Card.CardProto, com.st.proto.Card.CardProto.Builder, com.st.proto.Card.CardProtoOrBuilder> cardListBuilder_;

      /**
       * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
       */
      public java.util.List<com.st.proto.Card.CardProto> getCardListList() {
        if (cardListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cardList_);
        } else {
          return cardListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
       */
      public int getCardListCount() {
        if (cardListBuilder_ == null) {
          return cardList_.size();
        } else {
          return cardListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
       */
      public com.st.proto.Card.CardProto getCardList(int index) {
        if (cardListBuilder_ == null) {
          return cardList_.get(index);
        } else {
          return cardListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
       */
      public Builder setCardList(
          int index, com.st.proto.Card.CardProto value) {
        if (cardListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardListIsMutable();
          cardList_.set(index, value);
          onChanged();
        } else {
          cardListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
       */
      public Builder setCardList(
          int index, com.st.proto.Card.CardProto.Builder builderForValue) {
        if (cardListBuilder_ == null) {
          ensureCardListIsMutable();
          cardList_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
       */
      public Builder addCardList(com.st.proto.Card.CardProto value) {
        if (cardListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardListIsMutable();
          cardList_.add(value);
          onChanged();
        } else {
          cardListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
       */
      public Builder addCardList(
          int index, com.st.proto.Card.CardProto value) {
        if (cardListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardListIsMutable();
          cardList_.add(index, value);
          onChanged();
        } else {
          cardListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
       */
      public Builder addCardList(
          com.st.proto.Card.CardProto.Builder builderForValue) {
        if (cardListBuilder_ == null) {
          ensureCardListIsMutable();
          cardList_.add(builderForValue.build());
          onChanged();
        } else {
          cardListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
       */
      public Builder addCardList(
          int index, com.st.proto.Card.CardProto.Builder builderForValue) {
        if (cardListBuilder_ == null) {
          ensureCardListIsMutable();
          cardList_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
       */
      public Builder addAllCardList(
          java.lang.Iterable<? extends com.st.proto.Card.CardProto> values) {
        if (cardListBuilder_ == null) {
          ensureCardListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cardList_);
          onChanged();
        } else {
          cardListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
       */
      public Builder clearCardList() {
        if (cardListBuilder_ == null) {
          cardList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          cardListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
       */
      public Builder removeCardList(int index) {
        if (cardListBuilder_ == null) {
          ensureCardListIsMutable();
          cardList_.remove(index);
          onChanged();
        } else {
          cardListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
       */
      public com.st.proto.Card.CardProto.Builder getCardListBuilder(
          int index) {
        return getCardListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
       */
      public com.st.proto.Card.CardProtoOrBuilder getCardListOrBuilder(
          int index) {
        if (cardListBuilder_ == null) {
          return cardList_.get(index);  } else {
          return cardListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
       */
      public java.util.List<? extends com.st.proto.Card.CardProtoOrBuilder> 
           getCardListOrBuilderList() {
        if (cardListBuilder_ != null) {
          return cardListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cardList_);
        }
      }
      /**
       * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
       */
      public com.st.proto.Card.CardProto.Builder addCardListBuilder() {
        return getCardListFieldBuilder().addBuilder(
            com.st.proto.Card.CardProto.getDefaultInstance());
      }
      /**
       * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
       */
      public com.st.proto.Card.CardProto.Builder addCardListBuilder(
          int index) {
        return getCardListFieldBuilder().addBuilder(
            index, com.st.proto.Card.CardProto.getDefaultInstance());
      }
      /**
       * <code>repeated .com.st.proto.CardProto card_list = 1;</code>
       */
      public java.util.List<com.st.proto.Card.CardProto.Builder> 
           getCardListBuilderList() {
        return getCardListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.st.proto.Card.CardProto, com.st.proto.Card.CardProto.Builder, com.st.proto.Card.CardProtoOrBuilder> 
          getCardListFieldBuilder() {
        if (cardListBuilder_ == null) {
          cardListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.st.proto.Card.CardProto, com.st.proto.Card.CardProto.Builder, com.st.proto.Card.CardProtoOrBuilder>(
                  cardList_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          cardList_ = null;
        }
        return cardListBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.st.proto.CardListProto)
    }

    // @@protoc_insertion_point(class_scope:com.st.proto.CardListProto)
    private static final com.st.proto.GameState.CardListProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.st.proto.GameState.CardListProto();
    }

    public static com.st.proto.GameState.CardListProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CardListProto>
        PARSER = new com.google.protobuf.AbstractParser<CardListProto>() {
      @java.lang.Override
      public CardListProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CardListProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CardListProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.st.proto.GameState.CardListProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GameStateProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.st.proto.GameStateProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
     */
    java.util.List<com.st.proto.Card.CardProto> 
        getHostHandList();
    /**
     * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
     */
    com.st.proto.Card.CardProto getHostHand(int index);
    /**
     * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
     */
    int getHostHandCount();
    /**
     * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
     */
    java.util.List<? extends com.st.proto.Card.CardProtoOrBuilder> 
        getHostHandOrBuilderList();
    /**
     * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
     */
    com.st.proto.Card.CardProtoOrBuilder getHostHandOrBuilder(
        int index);

    /**
     * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
     */
    java.util.List<com.st.proto.Card.CardProto> 
        getClientHandList();
    /**
     * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
     */
    com.st.proto.Card.CardProto getClientHand(int index);
    /**
     * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
     */
    int getClientHandCount();
    /**
     * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
     */
    java.util.List<? extends com.st.proto.Card.CardProtoOrBuilder> 
        getClientHandOrBuilderList();
    /**
     * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
     */
    com.st.proto.Card.CardProtoOrBuilder getClientHandOrBuilder(
        int index);

    /**
     * <code>repeated .com.st.proto.WallProto walls = 3;</code>
     */
    java.util.List<com.st.proto.Wall.WallProto> 
        getWallsList();
    /**
     * <code>repeated .com.st.proto.WallProto walls = 3;</code>
     */
    com.st.proto.Wall.WallProto getWalls(int index);
    /**
     * <code>repeated .com.st.proto.WallProto walls = 3;</code>
     */
    int getWallsCount();
    /**
     * <code>repeated .com.st.proto.WallProto walls = 3;</code>
     */
    java.util.List<? extends com.st.proto.Wall.WallProtoOrBuilder> 
        getWallsOrBuilderList();
    /**
     * <code>repeated .com.st.proto.WallProto walls = 3;</code>
     */
    com.st.proto.Wall.WallProtoOrBuilder getWallsOrBuilder(
        int index);

    /**
     * <code>optional int32 deck_size = 4;</code>
     * @return Whether the deckSize field is set.
     */
    boolean hasDeckSize();
    /**
     * <code>optional int32 deck_size = 4;</code>
     * @return The deckSize.
     */
    int getDeckSize();

    /**
     * <pre>
     * ColorProto to card list mapping.
     * </pre>
     *
     * <code>map&lt;int32, .com.st.proto.CardListProto&gt; discard = 5;</code>
     */
    int getDiscardCount();
    /**
     * <pre>
     * ColorProto to card list mapping.
     * </pre>
     *
     * <code>map&lt;int32, .com.st.proto.CardListProto&gt; discard = 5;</code>
     */
    boolean containsDiscard(
        int key);
    /**
     * Use {@link #getDiscardMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, com.st.proto.GameState.CardListProto>
    getDiscard();
    /**
     * <pre>
     * ColorProto to card list mapping.
     * </pre>
     *
     * <code>map&lt;int32, .com.st.proto.CardListProto&gt; discard = 5;</code>
     */
    java.util.Map<java.lang.Integer, com.st.proto.GameState.CardListProto>
    getDiscardMap();
    /**
     * <pre>
     * ColorProto to card list mapping.
     * </pre>
     *
     * <code>map&lt;int32, .com.st.proto.CardListProto&gt; discard = 5;</code>
     */
    /* nullable */
com.st.proto.GameState.CardListProto getDiscardOrDefault(
        int key,
        /* nullable */
com.st.proto.GameState.CardListProto defaultValue);
    /**
     * <pre>
     * ColorProto to card list mapping.
     * </pre>
     *
     * <code>map&lt;int32, .com.st.proto.CardListProto&gt; discard = 5;</code>
     */
    com.st.proto.GameState.CardListProto getDiscardOrThrow(
        int key);

    /**
     * <code>bool is_client_turn = 6;</code>
     * @return The isClientTurn.
     */
    boolean getIsClientTurn();

    /**
     * <code>int32 cauldron_count = 7;</code>
     * @return The cauldronCount.
     */
    int getCauldronCount();

    /**
     * <code>bool used_cauldron = 8;</code>
     * @return The usedCauldron.
     */
    boolean getUsedCauldron();

    /**
     * <code>bool is_client_attacker = 9;</code>
     * @return The isClientAttacker.
     */
    boolean getIsClientAttacker();

    /**
     * <code>.com.st.proto.WinnerProto winner = 10;</code>
     * @return The enum numeric value on the wire for winner.
     */
    int getWinnerValue();
    /**
     * <code>.com.st.proto.WinnerProto winner = 10;</code>
     * @return The winner.
     */
    com.st.proto.GameState.WinnerProto getWinner();

    /**
     * <code>.com.st.proto.CardProto last_played_card = 11;</code>
     * @return Whether the lastPlayedCard field is set.
     */
    boolean hasLastPlayedCard();
    /**
     * <code>.com.st.proto.CardProto last_played_card = 11;</code>
     * @return The lastPlayedCard.
     */
    com.st.proto.Card.CardProto getLastPlayedCard();
    /**
     * <code>.com.st.proto.CardProto last_played_card = 11;</code>
     */
    com.st.proto.Card.CardProtoOrBuilder getLastPlayedCardOrBuilder();
  }
  /**
   * Protobuf type {@code com.st.proto.GameStateProto}
   */
  public static final class GameStateProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.st.proto.GameStateProto)
      GameStateProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GameStateProto.newBuilder() to construct.
    private GameStateProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GameStateProto() {
      hostHand_ = java.util.Collections.emptyList();
      clientHand_ = java.util.Collections.emptyList();
      walls_ = java.util.Collections.emptyList();
      winner_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GameStateProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.st.proto.GameState.internal_static_com_st_proto_GameStateProto_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetDiscard();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.st.proto.GameState.internal_static_com_st_proto_GameStateProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.st.proto.GameState.GameStateProto.class, com.st.proto.GameState.GameStateProto.Builder.class);
    }

    private int bitField0_;
    public static final int HOST_HAND_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.st.proto.Card.CardProto> hostHand_;
    /**
     * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.st.proto.Card.CardProto> getHostHandList() {
      return hostHand_;
    }
    /**
     * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.st.proto.Card.CardProtoOrBuilder> 
        getHostHandOrBuilderList() {
      return hostHand_;
    }
    /**
     * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
     */
    @java.lang.Override
    public int getHostHandCount() {
      return hostHand_.size();
    }
    /**
     * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
     */
    @java.lang.Override
    public com.st.proto.Card.CardProto getHostHand(int index) {
      return hostHand_.get(index);
    }
    /**
     * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
     */
    @java.lang.Override
    public com.st.proto.Card.CardProtoOrBuilder getHostHandOrBuilder(
        int index) {
      return hostHand_.get(index);
    }

    public static final int CLIENT_HAND_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<com.st.proto.Card.CardProto> clientHand_;
    /**
     * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.st.proto.Card.CardProto> getClientHandList() {
      return clientHand_;
    }
    /**
     * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.st.proto.Card.CardProtoOrBuilder> 
        getClientHandOrBuilderList() {
      return clientHand_;
    }
    /**
     * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
     */
    @java.lang.Override
    public int getClientHandCount() {
      return clientHand_.size();
    }
    /**
     * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
     */
    @java.lang.Override
    public com.st.proto.Card.CardProto getClientHand(int index) {
      return clientHand_.get(index);
    }
    /**
     * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
     */
    @java.lang.Override
    public com.st.proto.Card.CardProtoOrBuilder getClientHandOrBuilder(
        int index) {
      return clientHand_.get(index);
    }

    public static final int WALLS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<com.st.proto.Wall.WallProto> walls_;
    /**
     * <code>repeated .com.st.proto.WallProto walls = 3;</code>
     */
    @java.lang.Override
    public java.util.List<com.st.proto.Wall.WallProto> getWallsList() {
      return walls_;
    }
    /**
     * <code>repeated .com.st.proto.WallProto walls = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.st.proto.Wall.WallProtoOrBuilder> 
        getWallsOrBuilderList() {
      return walls_;
    }
    /**
     * <code>repeated .com.st.proto.WallProto walls = 3;</code>
     */
    @java.lang.Override
    public int getWallsCount() {
      return walls_.size();
    }
    /**
     * <code>repeated .com.st.proto.WallProto walls = 3;</code>
     */
    @java.lang.Override
    public com.st.proto.Wall.WallProto getWalls(int index) {
      return walls_.get(index);
    }
    /**
     * <code>repeated .com.st.proto.WallProto walls = 3;</code>
     */
    @java.lang.Override
    public com.st.proto.Wall.WallProtoOrBuilder getWallsOrBuilder(
        int index) {
      return walls_.get(index);
    }

    public static final int DECK_SIZE_FIELD_NUMBER = 4;
    private int deckSize_ = 0;
    /**
     * <code>optional int32 deck_size = 4;</code>
     * @return Whether the deckSize field is set.
     */
    @java.lang.Override
    public boolean hasDeckSize() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 deck_size = 4;</code>
     * @return The deckSize.
     */
    @java.lang.Override
    public int getDeckSize() {
      return deckSize_;
    }

    public static final int DISCARD_FIELD_NUMBER = 5;
    private static final class DiscardDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, com.st.proto.GameState.CardListProto> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, com.st.proto.GameState.CardListProto>newDefaultInstance(
                  com.st.proto.GameState.internal_static_com_st_proto_GameStateProto_DiscardEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  com.st.proto.GameState.CardListProto.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Integer, com.st.proto.GameState.CardListProto> discard_;
    private com.google.protobuf.MapField<java.lang.Integer, com.st.proto.GameState.CardListProto>
    internalGetDiscard() {
      if (discard_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            DiscardDefaultEntryHolder.defaultEntry);
      }
      return discard_;
    }
    public int getDiscardCount() {
      return internalGetDiscard().getMap().size();
    }
    /**
     * <pre>
     * ColorProto to card list mapping.
     * </pre>
     *
     * <code>map&lt;int32, .com.st.proto.CardListProto&gt; discard = 5;</code>
     */
    @java.lang.Override
    public boolean containsDiscard(
        int key) {
      
      return internalGetDiscard().getMap().containsKey(key);
    }
    /**
     * Use {@link #getDiscardMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.st.proto.GameState.CardListProto> getDiscard() {
      return getDiscardMap();
    }
    /**
     * <pre>
     * ColorProto to card list mapping.
     * </pre>
     *
     * <code>map&lt;int32, .com.st.proto.CardListProto&gt; discard = 5;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, com.st.proto.GameState.CardListProto> getDiscardMap() {
      return internalGetDiscard().getMap();
    }
    /**
     * <pre>
     * ColorProto to card list mapping.
     * </pre>
     *
     * <code>map&lt;int32, .com.st.proto.CardListProto&gt; discard = 5;</code>
     */
    @java.lang.Override
    public /* nullable */
com.st.proto.GameState.CardListProto getDiscardOrDefault(
        int key,
        /* nullable */
com.st.proto.GameState.CardListProto defaultValue) {
      
      java.util.Map<java.lang.Integer, com.st.proto.GameState.CardListProto> map =
          internalGetDiscard().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * ColorProto to card list mapping.
     * </pre>
     *
     * <code>map&lt;int32, .com.st.proto.CardListProto&gt; discard = 5;</code>
     */
    @java.lang.Override
    public com.st.proto.GameState.CardListProto getDiscardOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.st.proto.GameState.CardListProto> map =
          internalGetDiscard().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int IS_CLIENT_TURN_FIELD_NUMBER = 6;
    private boolean isClientTurn_ = false;
    /**
     * <code>bool is_client_turn = 6;</code>
     * @return The isClientTurn.
     */
    @java.lang.Override
    public boolean getIsClientTurn() {
      return isClientTurn_;
    }

    public static final int CAULDRON_COUNT_FIELD_NUMBER = 7;
    private int cauldronCount_ = 0;
    /**
     * <code>int32 cauldron_count = 7;</code>
     * @return The cauldronCount.
     */
    @java.lang.Override
    public int getCauldronCount() {
      return cauldronCount_;
    }

    public static final int USED_CAULDRON_FIELD_NUMBER = 8;
    private boolean usedCauldron_ = false;
    /**
     * <code>bool used_cauldron = 8;</code>
     * @return The usedCauldron.
     */
    @java.lang.Override
    public boolean getUsedCauldron() {
      return usedCauldron_;
    }

    public static final int IS_CLIENT_ATTACKER_FIELD_NUMBER = 9;
    private boolean isClientAttacker_ = false;
    /**
     * <code>bool is_client_attacker = 9;</code>
     * @return The isClientAttacker.
     */
    @java.lang.Override
    public boolean getIsClientAttacker() {
      return isClientAttacker_;
    }

    public static final int WINNER_FIELD_NUMBER = 10;
    private int winner_ = 0;
    /**
     * <code>.com.st.proto.WinnerProto winner = 10;</code>
     * @return The enum numeric value on the wire for winner.
     */
    @java.lang.Override public int getWinnerValue() {
      return winner_;
    }
    /**
     * <code>.com.st.proto.WinnerProto winner = 10;</code>
     * @return The winner.
     */
    @java.lang.Override public com.st.proto.GameState.WinnerProto getWinner() {
      com.st.proto.GameState.WinnerProto result = com.st.proto.GameState.WinnerProto.forNumber(winner_);
      return result == null ? com.st.proto.GameState.WinnerProto.UNRECOGNIZED : result;
    }

    public static final int LAST_PLAYED_CARD_FIELD_NUMBER = 11;
    private com.st.proto.Card.CardProto lastPlayedCard_;
    /**
     * <code>.com.st.proto.CardProto last_played_card = 11;</code>
     * @return Whether the lastPlayedCard field is set.
     */
    @java.lang.Override
    public boolean hasLastPlayedCard() {
      return lastPlayedCard_ != null;
    }
    /**
     * <code>.com.st.proto.CardProto last_played_card = 11;</code>
     * @return The lastPlayedCard.
     */
    @java.lang.Override
    public com.st.proto.Card.CardProto getLastPlayedCard() {
      return lastPlayedCard_ == null ? com.st.proto.Card.CardProto.getDefaultInstance() : lastPlayedCard_;
    }
    /**
     * <code>.com.st.proto.CardProto last_played_card = 11;</code>
     */
    @java.lang.Override
    public com.st.proto.Card.CardProtoOrBuilder getLastPlayedCardOrBuilder() {
      return lastPlayedCard_ == null ? com.st.proto.Card.CardProto.getDefaultInstance() : lastPlayedCard_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < hostHand_.size(); i++) {
        output.writeMessage(1, hostHand_.get(i));
      }
      for (int i = 0; i < clientHand_.size(); i++) {
        output.writeMessage(2, clientHand_.get(i));
      }
      for (int i = 0; i < walls_.size(); i++) {
        output.writeMessage(3, walls_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(4, deckSize_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetDiscard(),
          DiscardDefaultEntryHolder.defaultEntry,
          5);
      if (isClientTurn_ != false) {
        output.writeBool(6, isClientTurn_);
      }
      if (cauldronCount_ != 0) {
        output.writeInt32(7, cauldronCount_);
      }
      if (usedCauldron_ != false) {
        output.writeBool(8, usedCauldron_);
      }
      if (isClientAttacker_ != false) {
        output.writeBool(9, isClientAttacker_);
      }
      if (winner_ != com.st.proto.GameState.WinnerProto.NONE_WINNER.getNumber()) {
        output.writeEnum(10, winner_);
      }
      if (lastPlayedCard_ != null) {
        output.writeMessage(11, getLastPlayedCard());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < hostHand_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, hostHand_.get(i));
      }
      for (int i = 0; i < clientHand_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, clientHand_.get(i));
      }
      for (int i = 0; i < walls_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, walls_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, deckSize_);
      }
      for (java.util.Map.Entry<java.lang.Integer, com.st.proto.GameState.CardListProto> entry
           : internalGetDiscard().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, com.st.proto.GameState.CardListProto>
        discard__ = DiscardDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, discard__);
      }
      if (isClientTurn_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, isClientTurn_);
      }
      if (cauldronCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, cauldronCount_);
      }
      if (usedCauldron_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, usedCauldron_);
      }
      if (isClientAttacker_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, isClientAttacker_);
      }
      if (winner_ != com.st.proto.GameState.WinnerProto.NONE_WINNER.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, winner_);
      }
      if (lastPlayedCard_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getLastPlayedCard());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.st.proto.GameState.GameStateProto)) {
        return super.equals(obj);
      }
      com.st.proto.GameState.GameStateProto other = (com.st.proto.GameState.GameStateProto) obj;

      if (!getHostHandList()
          .equals(other.getHostHandList())) return false;
      if (!getClientHandList()
          .equals(other.getClientHandList())) return false;
      if (!getWallsList()
          .equals(other.getWallsList())) return false;
      if (hasDeckSize() != other.hasDeckSize()) return false;
      if (hasDeckSize()) {
        if (getDeckSize()
            != other.getDeckSize()) return false;
      }
      if (!internalGetDiscard().equals(
          other.internalGetDiscard())) return false;
      if (getIsClientTurn()
          != other.getIsClientTurn()) return false;
      if (getCauldronCount()
          != other.getCauldronCount()) return false;
      if (getUsedCauldron()
          != other.getUsedCauldron()) return false;
      if (getIsClientAttacker()
          != other.getIsClientAttacker()) return false;
      if (winner_ != other.winner_) return false;
      if (hasLastPlayedCard() != other.hasLastPlayedCard()) return false;
      if (hasLastPlayedCard()) {
        if (!getLastPlayedCard()
            .equals(other.getLastPlayedCard())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getHostHandCount() > 0) {
        hash = (37 * hash) + HOST_HAND_FIELD_NUMBER;
        hash = (53 * hash) + getHostHandList().hashCode();
      }
      if (getClientHandCount() > 0) {
        hash = (37 * hash) + CLIENT_HAND_FIELD_NUMBER;
        hash = (53 * hash) + getClientHandList().hashCode();
      }
      if (getWallsCount() > 0) {
        hash = (37 * hash) + WALLS_FIELD_NUMBER;
        hash = (53 * hash) + getWallsList().hashCode();
      }
      if (hasDeckSize()) {
        hash = (37 * hash) + DECK_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getDeckSize();
      }
      if (!internalGetDiscard().getMap().isEmpty()) {
        hash = (37 * hash) + DISCARD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetDiscard().hashCode();
      }
      hash = (37 * hash) + IS_CLIENT_TURN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsClientTurn());
      hash = (37 * hash) + CAULDRON_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getCauldronCount();
      hash = (37 * hash) + USED_CAULDRON_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getUsedCauldron());
      hash = (37 * hash) + IS_CLIENT_ATTACKER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsClientAttacker());
      hash = (37 * hash) + WINNER_FIELD_NUMBER;
      hash = (53 * hash) + winner_;
      if (hasLastPlayedCard()) {
        hash = (37 * hash) + LAST_PLAYED_CARD_FIELD_NUMBER;
        hash = (53 * hash) + getLastPlayedCard().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.st.proto.GameState.GameStateProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.st.proto.GameState.GameStateProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.st.proto.GameState.GameStateProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.st.proto.GameState.GameStateProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.st.proto.GameState.GameStateProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.st.proto.GameState.GameStateProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.st.proto.GameState.GameStateProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.st.proto.GameState.GameStateProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.st.proto.GameState.GameStateProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.st.proto.GameState.GameStateProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.st.proto.GameState.GameStateProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.st.proto.GameState.GameStateProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.st.proto.GameState.GameStateProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.st.proto.GameStateProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.st.proto.GameStateProto)
        com.st.proto.GameState.GameStateProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.st.proto.GameState.internal_static_com_st_proto_GameStateProto_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 5:
            return internalGetDiscard();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 5:
            return internalGetMutableDiscard();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.st.proto.GameState.internal_static_com_st_proto_GameStateProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.st.proto.GameState.GameStateProto.class, com.st.proto.GameState.GameStateProto.Builder.class);
      }

      // Construct using com.st.proto.GameState.GameStateProto.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (hostHandBuilder_ == null) {
          hostHand_ = java.util.Collections.emptyList();
        } else {
          hostHand_ = null;
          hostHandBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (clientHandBuilder_ == null) {
          clientHand_ = java.util.Collections.emptyList();
        } else {
          clientHand_ = null;
          clientHandBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (wallsBuilder_ == null) {
          walls_ = java.util.Collections.emptyList();
        } else {
          walls_ = null;
          wallsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        deckSize_ = 0;
        internalGetMutableDiscard().clear();
        isClientTurn_ = false;
        cauldronCount_ = 0;
        usedCauldron_ = false;
        isClientAttacker_ = false;
        winner_ = 0;
        lastPlayedCard_ = null;
        if (lastPlayedCardBuilder_ != null) {
          lastPlayedCardBuilder_.dispose();
          lastPlayedCardBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.st.proto.GameState.internal_static_com_st_proto_GameStateProto_descriptor;
      }

      @java.lang.Override
      public com.st.proto.GameState.GameStateProto getDefaultInstanceForType() {
        return com.st.proto.GameState.GameStateProto.getDefaultInstance();
      }

      @java.lang.Override
      public com.st.proto.GameState.GameStateProto build() {
        com.st.proto.GameState.GameStateProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.st.proto.GameState.GameStateProto buildPartial() {
        com.st.proto.GameState.GameStateProto result = new com.st.proto.GameState.GameStateProto(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.st.proto.GameState.GameStateProto result) {
        if (hostHandBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            hostHand_ = java.util.Collections.unmodifiableList(hostHand_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.hostHand_ = hostHand_;
        } else {
          result.hostHand_ = hostHandBuilder_.build();
        }
        if (clientHandBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            clientHand_ = java.util.Collections.unmodifiableList(clientHand_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.clientHand_ = clientHand_;
        } else {
          result.clientHand_ = clientHandBuilder_.build();
        }
        if (wallsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            walls_ = java.util.Collections.unmodifiableList(walls_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.walls_ = walls_;
        } else {
          result.walls_ = wallsBuilder_.build();
        }
      }

      private void buildPartial0(com.st.proto.GameState.GameStateProto result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.deckSize_ = deckSize_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.discard_ = internalGetDiscard();
          result.discard_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.isClientTurn_ = isClientTurn_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.cauldronCount_ = cauldronCount_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.usedCauldron_ = usedCauldron_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.isClientAttacker_ = isClientAttacker_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.winner_ = winner_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.lastPlayedCard_ = lastPlayedCardBuilder_ == null
              ? lastPlayedCard_
              : lastPlayedCardBuilder_.build();
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.st.proto.GameState.GameStateProto) {
          return mergeFrom((com.st.proto.GameState.GameStateProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.st.proto.GameState.GameStateProto other) {
        if (other == com.st.proto.GameState.GameStateProto.getDefaultInstance()) return this;
        if (hostHandBuilder_ == null) {
          if (!other.hostHand_.isEmpty()) {
            if (hostHand_.isEmpty()) {
              hostHand_ = other.hostHand_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureHostHandIsMutable();
              hostHand_.addAll(other.hostHand_);
            }
            onChanged();
          }
        } else {
          if (!other.hostHand_.isEmpty()) {
            if (hostHandBuilder_.isEmpty()) {
              hostHandBuilder_.dispose();
              hostHandBuilder_ = null;
              hostHand_ = other.hostHand_;
              bitField0_ = (bitField0_ & ~0x00000001);
              hostHandBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getHostHandFieldBuilder() : null;
            } else {
              hostHandBuilder_.addAllMessages(other.hostHand_);
            }
          }
        }
        if (clientHandBuilder_ == null) {
          if (!other.clientHand_.isEmpty()) {
            if (clientHand_.isEmpty()) {
              clientHand_ = other.clientHand_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureClientHandIsMutable();
              clientHand_.addAll(other.clientHand_);
            }
            onChanged();
          }
        } else {
          if (!other.clientHand_.isEmpty()) {
            if (clientHandBuilder_.isEmpty()) {
              clientHandBuilder_.dispose();
              clientHandBuilder_ = null;
              clientHand_ = other.clientHand_;
              bitField0_ = (bitField0_ & ~0x00000002);
              clientHandBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getClientHandFieldBuilder() : null;
            } else {
              clientHandBuilder_.addAllMessages(other.clientHand_);
            }
          }
        }
        if (wallsBuilder_ == null) {
          if (!other.walls_.isEmpty()) {
            if (walls_.isEmpty()) {
              walls_ = other.walls_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureWallsIsMutable();
              walls_.addAll(other.walls_);
            }
            onChanged();
          }
        } else {
          if (!other.walls_.isEmpty()) {
            if (wallsBuilder_.isEmpty()) {
              wallsBuilder_.dispose();
              wallsBuilder_ = null;
              walls_ = other.walls_;
              bitField0_ = (bitField0_ & ~0x00000004);
              wallsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getWallsFieldBuilder() : null;
            } else {
              wallsBuilder_.addAllMessages(other.walls_);
            }
          }
        }
        if (other.hasDeckSize()) {
          setDeckSize(other.getDeckSize());
        }
        internalGetMutableDiscard().mergeFrom(
            other.internalGetDiscard());
        bitField0_ |= 0x00000010;
        if (other.getIsClientTurn() != false) {
          setIsClientTurn(other.getIsClientTurn());
        }
        if (other.getCauldronCount() != 0) {
          setCauldronCount(other.getCauldronCount());
        }
        if (other.getUsedCauldron() != false) {
          setUsedCauldron(other.getUsedCauldron());
        }
        if (other.getIsClientAttacker() != false) {
          setIsClientAttacker(other.getIsClientAttacker());
        }
        if (other.winner_ != 0) {
          setWinnerValue(other.getWinnerValue());
        }
        if (other.hasLastPlayedCard()) {
          mergeLastPlayedCard(other.getLastPlayedCard());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.st.proto.Card.CardProto m =
                    input.readMessage(
                        com.st.proto.Card.CardProto.parser(),
                        extensionRegistry);
                if (hostHandBuilder_ == null) {
                  ensureHostHandIsMutable();
                  hostHand_.add(m);
                } else {
                  hostHandBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                com.st.proto.Card.CardProto m =
                    input.readMessage(
                        com.st.proto.Card.CardProto.parser(),
                        extensionRegistry);
                if (clientHandBuilder_ == null) {
                  ensureClientHandIsMutable();
                  clientHand_.add(m);
                } else {
                  clientHandBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                com.st.proto.Wall.WallProto m =
                    input.readMessage(
                        com.st.proto.Wall.WallProto.parser(),
                        extensionRegistry);
                if (wallsBuilder_ == null) {
                  ensureWallsIsMutable();
                  walls_.add(m);
                } else {
                  wallsBuilder_.addMessage(m);
                }
                break;
              } // case 26
              case 32: {
                deckSize_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 42: {
                com.google.protobuf.MapEntry<java.lang.Integer, com.st.proto.GameState.CardListProto>
                discard__ = input.readMessage(
                    DiscardDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableDiscard().getMutableMap().put(
                    discard__.getKey(), discard__.getValue());
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 48: {
                isClientTurn_ = input.readBool();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                cauldronCount_ = input.readInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                usedCauldron_ = input.readBool();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                isClientAttacker_ = input.readBool();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                winner_ = input.readEnum();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 90: {
                input.readMessage(
                    getLastPlayedCardFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000400;
                break;
              } // case 90
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.st.proto.Card.CardProto> hostHand_ =
        java.util.Collections.emptyList();
      private void ensureHostHandIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          hostHand_ = new java.util.ArrayList<com.st.proto.Card.CardProto>(hostHand_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.st.proto.Card.CardProto, com.st.proto.Card.CardProto.Builder, com.st.proto.Card.CardProtoOrBuilder> hostHandBuilder_;

      /**
       * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
       */
      public java.util.List<com.st.proto.Card.CardProto> getHostHandList() {
        if (hostHandBuilder_ == null) {
          return java.util.Collections.unmodifiableList(hostHand_);
        } else {
          return hostHandBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
       */
      public int getHostHandCount() {
        if (hostHandBuilder_ == null) {
          return hostHand_.size();
        } else {
          return hostHandBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
       */
      public com.st.proto.Card.CardProto getHostHand(int index) {
        if (hostHandBuilder_ == null) {
          return hostHand_.get(index);
        } else {
          return hostHandBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
       */
      public Builder setHostHand(
          int index, com.st.proto.Card.CardProto value) {
        if (hostHandBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHostHandIsMutable();
          hostHand_.set(index, value);
          onChanged();
        } else {
          hostHandBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
       */
      public Builder setHostHand(
          int index, com.st.proto.Card.CardProto.Builder builderForValue) {
        if (hostHandBuilder_ == null) {
          ensureHostHandIsMutable();
          hostHand_.set(index, builderForValue.build());
          onChanged();
        } else {
          hostHandBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
       */
      public Builder addHostHand(com.st.proto.Card.CardProto value) {
        if (hostHandBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHostHandIsMutable();
          hostHand_.add(value);
          onChanged();
        } else {
          hostHandBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
       */
      public Builder addHostHand(
          int index, com.st.proto.Card.CardProto value) {
        if (hostHandBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHostHandIsMutable();
          hostHand_.add(index, value);
          onChanged();
        } else {
          hostHandBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
       */
      public Builder addHostHand(
          com.st.proto.Card.CardProto.Builder builderForValue) {
        if (hostHandBuilder_ == null) {
          ensureHostHandIsMutable();
          hostHand_.add(builderForValue.build());
          onChanged();
        } else {
          hostHandBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
       */
      public Builder addHostHand(
          int index, com.st.proto.Card.CardProto.Builder builderForValue) {
        if (hostHandBuilder_ == null) {
          ensureHostHandIsMutable();
          hostHand_.add(index, builderForValue.build());
          onChanged();
        } else {
          hostHandBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
       */
      public Builder addAllHostHand(
          java.lang.Iterable<? extends com.st.proto.Card.CardProto> values) {
        if (hostHandBuilder_ == null) {
          ensureHostHandIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, hostHand_);
          onChanged();
        } else {
          hostHandBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
       */
      public Builder clearHostHand() {
        if (hostHandBuilder_ == null) {
          hostHand_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          hostHandBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
       */
      public Builder removeHostHand(int index) {
        if (hostHandBuilder_ == null) {
          ensureHostHandIsMutable();
          hostHand_.remove(index);
          onChanged();
        } else {
          hostHandBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
       */
      public com.st.proto.Card.CardProto.Builder getHostHandBuilder(
          int index) {
        return getHostHandFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
       */
      public com.st.proto.Card.CardProtoOrBuilder getHostHandOrBuilder(
          int index) {
        if (hostHandBuilder_ == null) {
          return hostHand_.get(index);  } else {
          return hostHandBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
       */
      public java.util.List<? extends com.st.proto.Card.CardProtoOrBuilder> 
           getHostHandOrBuilderList() {
        if (hostHandBuilder_ != null) {
          return hostHandBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(hostHand_);
        }
      }
      /**
       * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
       */
      public com.st.proto.Card.CardProto.Builder addHostHandBuilder() {
        return getHostHandFieldBuilder().addBuilder(
            com.st.proto.Card.CardProto.getDefaultInstance());
      }
      /**
       * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
       */
      public com.st.proto.Card.CardProto.Builder addHostHandBuilder(
          int index) {
        return getHostHandFieldBuilder().addBuilder(
            index, com.st.proto.Card.CardProto.getDefaultInstance());
      }
      /**
       * <code>repeated .com.st.proto.CardProto host_hand = 1;</code>
       */
      public java.util.List<com.st.proto.Card.CardProto.Builder> 
           getHostHandBuilderList() {
        return getHostHandFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.st.proto.Card.CardProto, com.st.proto.Card.CardProto.Builder, com.st.proto.Card.CardProtoOrBuilder> 
          getHostHandFieldBuilder() {
        if (hostHandBuilder_ == null) {
          hostHandBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.st.proto.Card.CardProto, com.st.proto.Card.CardProto.Builder, com.st.proto.Card.CardProtoOrBuilder>(
                  hostHand_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          hostHand_ = null;
        }
        return hostHandBuilder_;
      }

      private java.util.List<com.st.proto.Card.CardProto> clientHand_ =
        java.util.Collections.emptyList();
      private void ensureClientHandIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          clientHand_ = new java.util.ArrayList<com.st.proto.Card.CardProto>(clientHand_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.st.proto.Card.CardProto, com.st.proto.Card.CardProto.Builder, com.st.proto.Card.CardProtoOrBuilder> clientHandBuilder_;

      /**
       * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
       */
      public java.util.List<com.st.proto.Card.CardProto> getClientHandList() {
        if (clientHandBuilder_ == null) {
          return java.util.Collections.unmodifiableList(clientHand_);
        } else {
          return clientHandBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
       */
      public int getClientHandCount() {
        if (clientHandBuilder_ == null) {
          return clientHand_.size();
        } else {
          return clientHandBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
       */
      public com.st.proto.Card.CardProto getClientHand(int index) {
        if (clientHandBuilder_ == null) {
          return clientHand_.get(index);
        } else {
          return clientHandBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
       */
      public Builder setClientHand(
          int index, com.st.proto.Card.CardProto value) {
        if (clientHandBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClientHandIsMutable();
          clientHand_.set(index, value);
          onChanged();
        } else {
          clientHandBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
       */
      public Builder setClientHand(
          int index, com.st.proto.Card.CardProto.Builder builderForValue) {
        if (clientHandBuilder_ == null) {
          ensureClientHandIsMutable();
          clientHand_.set(index, builderForValue.build());
          onChanged();
        } else {
          clientHandBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
       */
      public Builder addClientHand(com.st.proto.Card.CardProto value) {
        if (clientHandBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClientHandIsMutable();
          clientHand_.add(value);
          onChanged();
        } else {
          clientHandBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
       */
      public Builder addClientHand(
          int index, com.st.proto.Card.CardProto value) {
        if (clientHandBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClientHandIsMutable();
          clientHand_.add(index, value);
          onChanged();
        } else {
          clientHandBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
       */
      public Builder addClientHand(
          com.st.proto.Card.CardProto.Builder builderForValue) {
        if (clientHandBuilder_ == null) {
          ensureClientHandIsMutable();
          clientHand_.add(builderForValue.build());
          onChanged();
        } else {
          clientHandBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
       */
      public Builder addClientHand(
          int index, com.st.proto.Card.CardProto.Builder builderForValue) {
        if (clientHandBuilder_ == null) {
          ensureClientHandIsMutable();
          clientHand_.add(index, builderForValue.build());
          onChanged();
        } else {
          clientHandBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
       */
      public Builder addAllClientHand(
          java.lang.Iterable<? extends com.st.proto.Card.CardProto> values) {
        if (clientHandBuilder_ == null) {
          ensureClientHandIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, clientHand_);
          onChanged();
        } else {
          clientHandBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
       */
      public Builder clearClientHand() {
        if (clientHandBuilder_ == null) {
          clientHand_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          clientHandBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
       */
      public Builder removeClientHand(int index) {
        if (clientHandBuilder_ == null) {
          ensureClientHandIsMutable();
          clientHand_.remove(index);
          onChanged();
        } else {
          clientHandBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
       */
      public com.st.proto.Card.CardProto.Builder getClientHandBuilder(
          int index) {
        return getClientHandFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
       */
      public com.st.proto.Card.CardProtoOrBuilder getClientHandOrBuilder(
          int index) {
        if (clientHandBuilder_ == null) {
          return clientHand_.get(index);  } else {
          return clientHandBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
       */
      public java.util.List<? extends com.st.proto.Card.CardProtoOrBuilder> 
           getClientHandOrBuilderList() {
        if (clientHandBuilder_ != null) {
          return clientHandBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(clientHand_);
        }
      }
      /**
       * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
       */
      public com.st.proto.Card.CardProto.Builder addClientHandBuilder() {
        return getClientHandFieldBuilder().addBuilder(
            com.st.proto.Card.CardProto.getDefaultInstance());
      }
      /**
       * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
       */
      public com.st.proto.Card.CardProto.Builder addClientHandBuilder(
          int index) {
        return getClientHandFieldBuilder().addBuilder(
            index, com.st.proto.Card.CardProto.getDefaultInstance());
      }
      /**
       * <code>repeated .com.st.proto.CardProto client_hand = 2;</code>
       */
      public java.util.List<com.st.proto.Card.CardProto.Builder> 
           getClientHandBuilderList() {
        return getClientHandFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.st.proto.Card.CardProto, com.st.proto.Card.CardProto.Builder, com.st.proto.Card.CardProtoOrBuilder> 
          getClientHandFieldBuilder() {
        if (clientHandBuilder_ == null) {
          clientHandBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.st.proto.Card.CardProto, com.st.proto.Card.CardProto.Builder, com.st.proto.Card.CardProtoOrBuilder>(
                  clientHand_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          clientHand_ = null;
        }
        return clientHandBuilder_;
      }

      private java.util.List<com.st.proto.Wall.WallProto> walls_ =
        java.util.Collections.emptyList();
      private void ensureWallsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          walls_ = new java.util.ArrayList<com.st.proto.Wall.WallProto>(walls_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.st.proto.Wall.WallProto, com.st.proto.Wall.WallProto.Builder, com.st.proto.Wall.WallProtoOrBuilder> wallsBuilder_;

      /**
       * <code>repeated .com.st.proto.WallProto walls = 3;</code>
       */
      public java.util.List<com.st.proto.Wall.WallProto> getWallsList() {
        if (wallsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(walls_);
        } else {
          return wallsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.st.proto.WallProto walls = 3;</code>
       */
      public int getWallsCount() {
        if (wallsBuilder_ == null) {
          return walls_.size();
        } else {
          return wallsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.st.proto.WallProto walls = 3;</code>
       */
      public com.st.proto.Wall.WallProto getWalls(int index) {
        if (wallsBuilder_ == null) {
          return walls_.get(index);
        } else {
          return wallsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.st.proto.WallProto walls = 3;</code>
       */
      public Builder setWalls(
          int index, com.st.proto.Wall.WallProto value) {
        if (wallsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWallsIsMutable();
          walls_.set(index, value);
          onChanged();
        } else {
          wallsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.WallProto walls = 3;</code>
       */
      public Builder setWalls(
          int index, com.st.proto.Wall.WallProto.Builder builderForValue) {
        if (wallsBuilder_ == null) {
          ensureWallsIsMutable();
          walls_.set(index, builderForValue.build());
          onChanged();
        } else {
          wallsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.WallProto walls = 3;</code>
       */
      public Builder addWalls(com.st.proto.Wall.WallProto value) {
        if (wallsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWallsIsMutable();
          walls_.add(value);
          onChanged();
        } else {
          wallsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.WallProto walls = 3;</code>
       */
      public Builder addWalls(
          int index, com.st.proto.Wall.WallProto value) {
        if (wallsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWallsIsMutable();
          walls_.add(index, value);
          onChanged();
        } else {
          wallsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.WallProto walls = 3;</code>
       */
      public Builder addWalls(
          com.st.proto.Wall.WallProto.Builder builderForValue) {
        if (wallsBuilder_ == null) {
          ensureWallsIsMutable();
          walls_.add(builderForValue.build());
          onChanged();
        } else {
          wallsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.WallProto walls = 3;</code>
       */
      public Builder addWalls(
          int index, com.st.proto.Wall.WallProto.Builder builderForValue) {
        if (wallsBuilder_ == null) {
          ensureWallsIsMutable();
          walls_.add(index, builderForValue.build());
          onChanged();
        } else {
          wallsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.WallProto walls = 3;</code>
       */
      public Builder addAllWalls(
          java.lang.Iterable<? extends com.st.proto.Wall.WallProto> values) {
        if (wallsBuilder_ == null) {
          ensureWallsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, walls_);
          onChanged();
        } else {
          wallsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.WallProto walls = 3;</code>
       */
      public Builder clearWalls() {
        if (wallsBuilder_ == null) {
          walls_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          wallsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.WallProto walls = 3;</code>
       */
      public Builder removeWalls(int index) {
        if (wallsBuilder_ == null) {
          ensureWallsIsMutable();
          walls_.remove(index);
          onChanged();
        } else {
          wallsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.st.proto.WallProto walls = 3;</code>
       */
      public com.st.proto.Wall.WallProto.Builder getWallsBuilder(
          int index) {
        return getWallsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.st.proto.WallProto walls = 3;</code>
       */
      public com.st.proto.Wall.WallProtoOrBuilder getWallsOrBuilder(
          int index) {
        if (wallsBuilder_ == null) {
          return walls_.get(index);  } else {
          return wallsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.st.proto.WallProto walls = 3;</code>
       */
      public java.util.List<? extends com.st.proto.Wall.WallProtoOrBuilder> 
           getWallsOrBuilderList() {
        if (wallsBuilder_ != null) {
          return wallsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(walls_);
        }
      }
      /**
       * <code>repeated .com.st.proto.WallProto walls = 3;</code>
       */
      public com.st.proto.Wall.WallProto.Builder addWallsBuilder() {
        return getWallsFieldBuilder().addBuilder(
            com.st.proto.Wall.WallProto.getDefaultInstance());
      }
      /**
       * <code>repeated .com.st.proto.WallProto walls = 3;</code>
       */
      public com.st.proto.Wall.WallProto.Builder addWallsBuilder(
          int index) {
        return getWallsFieldBuilder().addBuilder(
            index, com.st.proto.Wall.WallProto.getDefaultInstance());
      }
      /**
       * <code>repeated .com.st.proto.WallProto walls = 3;</code>
       */
      public java.util.List<com.st.proto.Wall.WallProto.Builder> 
           getWallsBuilderList() {
        return getWallsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.st.proto.Wall.WallProto, com.st.proto.Wall.WallProto.Builder, com.st.proto.Wall.WallProtoOrBuilder> 
          getWallsFieldBuilder() {
        if (wallsBuilder_ == null) {
          wallsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.st.proto.Wall.WallProto, com.st.proto.Wall.WallProto.Builder, com.st.proto.Wall.WallProtoOrBuilder>(
                  walls_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          walls_ = null;
        }
        return wallsBuilder_;
      }

      private int deckSize_ ;
      /**
       * <code>optional int32 deck_size = 4;</code>
       * @return Whether the deckSize field is set.
       */
      @java.lang.Override
      public boolean hasDeckSize() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional int32 deck_size = 4;</code>
       * @return The deckSize.
       */
      @java.lang.Override
      public int getDeckSize() {
        return deckSize_;
      }
      /**
       * <code>optional int32 deck_size = 4;</code>
       * @param value The deckSize to set.
       * @return This builder for chaining.
       */
      public Builder setDeckSize(int value) {
        
        deckSize_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 deck_size = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDeckSize() {
        bitField0_ = (bitField0_ & ~0x00000008);
        deckSize_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, com.st.proto.GameState.CardListProto> discard_;
      private com.google.protobuf.MapField<java.lang.Integer, com.st.proto.GameState.CardListProto>
          internalGetDiscard() {
        if (discard_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              DiscardDefaultEntryHolder.defaultEntry);
        }
        return discard_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, com.st.proto.GameState.CardListProto>
          internalGetMutableDiscard() {
        if (discard_ == null) {
          discard_ = com.google.protobuf.MapField.newMapField(
              DiscardDefaultEntryHolder.defaultEntry);
        }
        if (!discard_.isMutable()) {
          discard_ = discard_.copy();
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return discard_;
      }
      public int getDiscardCount() {
        return internalGetDiscard().getMap().size();
      }
      /**
       * <pre>
       * ColorProto to card list mapping.
       * </pre>
       *
       * <code>map&lt;int32, .com.st.proto.CardListProto&gt; discard = 5;</code>
       */
      @java.lang.Override
      public boolean containsDiscard(
          int key) {
        
        return internalGetDiscard().getMap().containsKey(key);
      }
      /**
       * Use {@link #getDiscardMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.st.proto.GameState.CardListProto> getDiscard() {
        return getDiscardMap();
      }
      /**
       * <pre>
       * ColorProto to card list mapping.
       * </pre>
       *
       * <code>map&lt;int32, .com.st.proto.CardListProto&gt; discard = 5;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, com.st.proto.GameState.CardListProto> getDiscardMap() {
        return internalGetDiscard().getMap();
      }
      /**
       * <pre>
       * ColorProto to card list mapping.
       * </pre>
       *
       * <code>map&lt;int32, .com.st.proto.CardListProto&gt; discard = 5;</code>
       */
      @java.lang.Override
      public /* nullable */
com.st.proto.GameState.CardListProto getDiscardOrDefault(
          int key,
          /* nullable */
com.st.proto.GameState.CardListProto defaultValue) {
        
        java.util.Map<java.lang.Integer, com.st.proto.GameState.CardListProto> map =
            internalGetDiscard().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * ColorProto to card list mapping.
       * </pre>
       *
       * <code>map&lt;int32, .com.st.proto.CardListProto&gt; discard = 5;</code>
       */
      @java.lang.Override
      public com.st.proto.GameState.CardListProto getDiscardOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, com.st.proto.GameState.CardListProto> map =
            internalGetDiscard().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearDiscard() {
        bitField0_ = (bitField0_ & ~0x00000010);
        internalGetMutableDiscard().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * ColorProto to card list mapping.
       * </pre>
       *
       * <code>map&lt;int32, .com.st.proto.CardListProto&gt; discard = 5;</code>
       */
      public Builder removeDiscard(
          int key) {
        
        internalGetMutableDiscard().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.st.proto.GameState.CardListProto>
          getMutableDiscard() {
        bitField0_ |= 0x00000010;
        return internalGetMutableDiscard().getMutableMap();
      }
      /**
       * <pre>
       * ColorProto to card list mapping.
       * </pre>
       *
       * <code>map&lt;int32, .com.st.proto.CardListProto&gt; discard = 5;</code>
       */
      public Builder putDiscard(
          int key,
          com.st.proto.GameState.CardListProto value) {
        
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableDiscard().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * ColorProto to card list mapping.
       * </pre>
       *
       * <code>map&lt;int32, .com.st.proto.CardListProto&gt; discard = 5;</code>
       */
      public Builder putAllDiscard(
          java.util.Map<java.lang.Integer, com.st.proto.GameState.CardListProto> values) {
        internalGetMutableDiscard().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000010;
        return this;
      }

      private boolean isClientTurn_ ;
      /**
       * <code>bool is_client_turn = 6;</code>
       * @return The isClientTurn.
       */
      @java.lang.Override
      public boolean getIsClientTurn() {
        return isClientTurn_;
      }
      /**
       * <code>bool is_client_turn = 6;</code>
       * @param value The isClientTurn to set.
       * @return This builder for chaining.
       */
      public Builder setIsClientTurn(boolean value) {
        
        isClientTurn_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_client_turn = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsClientTurn() {
        bitField0_ = (bitField0_ & ~0x00000020);
        isClientTurn_ = false;
        onChanged();
        return this;
      }

      private int cauldronCount_ ;
      /**
       * <code>int32 cauldron_count = 7;</code>
       * @return The cauldronCount.
       */
      @java.lang.Override
      public int getCauldronCount() {
        return cauldronCount_;
      }
      /**
       * <code>int32 cauldron_count = 7;</code>
       * @param value The cauldronCount to set.
       * @return This builder for chaining.
       */
      public Builder setCauldronCount(int value) {
        
        cauldronCount_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>int32 cauldron_count = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearCauldronCount() {
        bitField0_ = (bitField0_ & ~0x00000040);
        cauldronCount_ = 0;
        onChanged();
        return this;
      }

      private boolean usedCauldron_ ;
      /**
       * <code>bool used_cauldron = 8;</code>
       * @return The usedCauldron.
       */
      @java.lang.Override
      public boolean getUsedCauldron() {
        return usedCauldron_;
      }
      /**
       * <code>bool used_cauldron = 8;</code>
       * @param value The usedCauldron to set.
       * @return This builder for chaining.
       */
      public Builder setUsedCauldron(boolean value) {
        
        usedCauldron_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>bool used_cauldron = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearUsedCauldron() {
        bitField0_ = (bitField0_ & ~0x00000080);
        usedCauldron_ = false;
        onChanged();
        return this;
      }

      private boolean isClientAttacker_ ;
      /**
       * <code>bool is_client_attacker = 9;</code>
       * @return The isClientAttacker.
       */
      @java.lang.Override
      public boolean getIsClientAttacker() {
        return isClientAttacker_;
      }
      /**
       * <code>bool is_client_attacker = 9;</code>
       * @param value The isClientAttacker to set.
       * @return This builder for chaining.
       */
      public Builder setIsClientAttacker(boolean value) {
        
        isClientAttacker_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_client_attacker = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsClientAttacker() {
        bitField0_ = (bitField0_ & ~0x00000100);
        isClientAttacker_ = false;
        onChanged();
        return this;
      }

      private int winner_ = 0;
      /**
       * <code>.com.st.proto.WinnerProto winner = 10;</code>
       * @return The enum numeric value on the wire for winner.
       */
      @java.lang.Override public int getWinnerValue() {
        return winner_;
      }
      /**
       * <code>.com.st.proto.WinnerProto winner = 10;</code>
       * @param value The enum numeric value on the wire for winner to set.
       * @return This builder for chaining.
       */
      public Builder setWinnerValue(int value) {
        winner_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>.com.st.proto.WinnerProto winner = 10;</code>
       * @return The winner.
       */
      @java.lang.Override
      public com.st.proto.GameState.WinnerProto getWinner() {
        com.st.proto.GameState.WinnerProto result = com.st.proto.GameState.WinnerProto.forNumber(winner_);
        return result == null ? com.st.proto.GameState.WinnerProto.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.st.proto.WinnerProto winner = 10;</code>
       * @param value The winner to set.
       * @return This builder for chaining.
       */
      public Builder setWinner(com.st.proto.GameState.WinnerProto value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        winner_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.st.proto.WinnerProto winner = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearWinner() {
        bitField0_ = (bitField0_ & ~0x00000200);
        winner_ = 0;
        onChanged();
        return this;
      }

      private com.st.proto.Card.CardProto lastPlayedCard_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.st.proto.Card.CardProto, com.st.proto.Card.CardProto.Builder, com.st.proto.Card.CardProtoOrBuilder> lastPlayedCardBuilder_;
      /**
       * <code>.com.st.proto.CardProto last_played_card = 11;</code>
       * @return Whether the lastPlayedCard field is set.
       */
      public boolean hasLastPlayedCard() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>.com.st.proto.CardProto last_played_card = 11;</code>
       * @return The lastPlayedCard.
       */
      public com.st.proto.Card.CardProto getLastPlayedCard() {
        if (lastPlayedCardBuilder_ == null) {
          return lastPlayedCard_ == null ? com.st.proto.Card.CardProto.getDefaultInstance() : lastPlayedCard_;
        } else {
          return lastPlayedCardBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.st.proto.CardProto last_played_card = 11;</code>
       */
      public Builder setLastPlayedCard(com.st.proto.Card.CardProto value) {
        if (lastPlayedCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lastPlayedCard_ = value;
        } else {
          lastPlayedCardBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>.com.st.proto.CardProto last_played_card = 11;</code>
       */
      public Builder setLastPlayedCard(
          com.st.proto.Card.CardProto.Builder builderForValue) {
        if (lastPlayedCardBuilder_ == null) {
          lastPlayedCard_ = builderForValue.build();
        } else {
          lastPlayedCardBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>.com.st.proto.CardProto last_played_card = 11;</code>
       */
      public Builder mergeLastPlayedCard(com.st.proto.Card.CardProto value) {
        if (lastPlayedCardBuilder_ == null) {
          if (((bitField0_ & 0x00000400) != 0) &&
            lastPlayedCard_ != null &&
            lastPlayedCard_ != com.st.proto.Card.CardProto.getDefaultInstance()) {
            getLastPlayedCardBuilder().mergeFrom(value);
          } else {
            lastPlayedCard_ = value;
          }
        } else {
          lastPlayedCardBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>.com.st.proto.CardProto last_played_card = 11;</code>
       */
      public Builder clearLastPlayedCard() {
        bitField0_ = (bitField0_ & ~0x00000400);
        lastPlayedCard_ = null;
        if (lastPlayedCardBuilder_ != null) {
          lastPlayedCardBuilder_.dispose();
          lastPlayedCardBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.com.st.proto.CardProto last_played_card = 11;</code>
       */
      public com.st.proto.Card.CardProto.Builder getLastPlayedCardBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getLastPlayedCardFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.st.proto.CardProto last_played_card = 11;</code>
       */
      public com.st.proto.Card.CardProtoOrBuilder getLastPlayedCardOrBuilder() {
        if (lastPlayedCardBuilder_ != null) {
          return lastPlayedCardBuilder_.getMessageOrBuilder();
        } else {
          return lastPlayedCard_ == null ?
              com.st.proto.Card.CardProto.getDefaultInstance() : lastPlayedCard_;
        }
      }
      /**
       * <code>.com.st.proto.CardProto last_played_card = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.st.proto.Card.CardProto, com.st.proto.Card.CardProto.Builder, com.st.proto.Card.CardProtoOrBuilder> 
          getLastPlayedCardFieldBuilder() {
        if (lastPlayedCardBuilder_ == null) {
          lastPlayedCardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.st.proto.Card.CardProto, com.st.proto.Card.CardProto.Builder, com.st.proto.Card.CardProtoOrBuilder>(
                  getLastPlayedCard(),
                  getParentForChildren(),
                  isClean());
          lastPlayedCard_ = null;
        }
        return lastPlayedCardBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.st.proto.GameStateProto)
    }

    // @@protoc_insertion_point(class_scope:com.st.proto.GameStateProto)
    private static final com.st.proto.GameState.GameStateProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.st.proto.GameState.GameStateProto();
    }

    public static com.st.proto.GameState.GameStateProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GameStateProto>
        PARSER = new com.google.protobuf.AbstractParser<GameStateProto>() {
      @java.lang.Override
      public GameStateProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GameStateProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GameStateProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.st.proto.GameState.GameStateProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_st_proto_CardListProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_st_proto_CardListProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_st_proto_GameStateProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_st_proto_GameStateProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_st_proto_GameStateProto_DiscardEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_st_proto_GameStateProto_DiscardEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020game_state.proto\022\014com.st.proto\032\ncard.p" +
      "roto\032\nwall.proto\";\n\rCardListProto\022*\n\tcar" +
      "d_list\030\001 \003(\0132\027.com.st.proto.CardProto\"\202\004" +
      "\n\016GameStateProto\022*\n\thost_hand\030\001 \003(\0132\027.co" +
      "m.st.proto.CardProto\022,\n\013client_hand\030\002 \003(" +
      "\0132\027.com.st.proto.CardProto\022&\n\005walls\030\003 \003(" +
      "\0132\027.com.st.proto.WallProto\022\026\n\tdeck_size\030" +
      "\004 \001(\005H\000\210\001\001\022:\n\007discard\030\005 \003(\0132).com.st.pro" +
      "to.GameStateProto.DiscardEntry\022\026\n\016is_cli" +
      "ent_turn\030\006 \001(\010\022\026\n\016cauldron_count\030\007 \001(\005\022\025" +
      "\n\rused_cauldron\030\010 \001(\010\022\032\n\022is_client_attac" +
      "ker\030\t \001(\010\022)\n\006winner\030\n \001(\0162\031.com.st.proto" +
      ".WinnerProto\0221\n\020last_played_card\030\013 \001(\0132\027" +
      ".com.st.proto.CardProto\032K\n\014DiscardEntry\022" +
      "\013\n\003key\030\001 \001(\005\022*\n\005value\030\002 \001(\0132\033.com.st.pro" +
      "to.CardListProto:\0028\001B\014\n\n_deck_size*:\n\013Wi" +
      "nnerProto\022\017\n\013NONE_WINNER\020\000\022\014\n\010ATTACKER\020\001" +
      "\022\014\n\010DEFENDER\020\002b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.st.proto.Card.getDescriptor(),
          com.st.proto.Wall.getDescriptor(),
        });
    internal_static_com_st_proto_CardListProto_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_st_proto_CardListProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_st_proto_CardListProto_descriptor,
        new java.lang.String[] { "CardList", });
    internal_static_com_st_proto_GameStateProto_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_st_proto_GameStateProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_st_proto_GameStateProto_descriptor,
        new java.lang.String[] { "HostHand", "ClientHand", "Walls", "DeckSize", "Discard", "IsClientTurn", "CauldronCount", "UsedCauldron", "IsClientAttacker", "Winner", "LastPlayedCard", "DeckSize", });
    internal_static_com_st_proto_GameStateProto_DiscardEntry_descriptor =
      internal_static_com_st_proto_GameStateProto_descriptor.getNestedTypes().get(0);
    internal_static_com_st_proto_GameStateProto_DiscardEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_st_proto_GameStateProto_DiscardEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    com.st.proto.Card.getDescriptor();
    com.st.proto.Wall.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
